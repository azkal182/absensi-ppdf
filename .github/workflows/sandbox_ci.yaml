name: CI/CD Absensi Apps

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [absensi, absensi-putri]
        include:
          - app: absensi
            port: 4040
            folder: absensi
            db: absensi
            url: https://absensi.amtsilatipusat.com
          - app: absensi-putri
            port: 4041
            folder: absensi-putri
            db: absensi_putri
            url: https://absensi-putri.amtsilatipusat.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Prisma Migrations
        env:
          DIRECT_DATABASE_URL: postgresql://azkal:azkal@165.22.106.176:5432/${{ matrix.db }}?pgbouncer=true
          DATABASE_URL: postgresql://azkal:azkal@165.22.106.176:6432/pool_${{ matrix.db }}?pgbouncer=true
        run: npx prisma migrate deploy || (sleep 10 && npx prisma migrate deploy)

      - name: Build Next.js app
        env:
          DATABASE_URL: postgresql://azkal:azkal@165.22.106.176:6432/pool_${{ matrix.db }}?pgbouncer=true
          DIRECT_DATABASE_URL: postgresql://azkal:azkal@165.22.106.176:5432/${{ matrix.db }}?pgbouncer=true
          NEXTAUTH_URL: ${{ matrix.url }}
          AUTH_TRUST_HOST: ${{ matrix.url }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
        run: pnpm build

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: ssh-keyscan 165.22.106.176 >> ~/.ssh/known_hosts

      - name: Deploy to VPS (pull repo if needed)
        run: |
          ssh -tt azkal@165.22.106.176 << EOF
            if [ ! -d "/home/azkal/project/${{ matrix.folder }}" ]; then
              echo "Directory not found, cloning..."
              git clone https://github.com/azkal182/absensi-ppdf.git /home/azkal/project/${{ matrix.folder }}
              cd /home/azkal/project/${{ matrix.folder }}
              git checkout main
            else
              echo "Directory exists, pulling latest code..."
              cd /home/azkal/project/${{ matrix.folder }}
              git pull origin main
            fi
            exit
          EOF

      - name: Copy build files
        run: |
          rsync -avz --delete .next/ azkal@165.22.106.176:/home/azkal/project/${{ matrix.folder }}/.next/
          rsync -avz --delete public/ azkal@165.22.106.176:/home/azkal/project/${{ matrix.folder }}/public/
          rsync -avz --delete package.json pnpm-lock.yaml azkal@165.22.106.176:/home/azkal/project/${{ matrix.folder }}/

      - name: Install deps and start app on VPS
        run: |
          ssh -tt azkal@165.22.106.176 << EOF
            cd /home/azkal/project/${{ matrix.folder }}

            if pm2 describe ${{ matrix.app }} > /dev/null; then
              pm2 stop ${{ matrix.app }}
              pm2 delete ${{ matrix.app }}
            fi

            pnpm install --production

            # Create/update .env file
            echo "DIRECT_DATABASE_URL=\"postgresql://azkal:azkal@localhost:5432/${{ matrix.db }}?pgbouncer=true\"" > .env
            echo "DATABASE_URL=\"postgresql://azkal:azkal@localhost:6432/pool_${{ matrix.db }}?pgbouncer=true\"" > .env
            echo "NEXTAUTH_URL=\"${{ matrix.url }}\"" >> .env
            echo "AUTH_TRUST_HOST=\"${{ matrix.url }}\"" >> .env
            echo "AUTH_SECRET=${{ secrets.AUTH_SECRET }}" >> .env

            pm2 start npm --name "${{ matrix.app }}" -- start -- -p ${{ matrix.port }}

            exit
          EOF
